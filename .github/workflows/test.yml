name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^solutions/')
          echo "CHANGED_FILES=$(echo "$CHANGED_FILES" | xargs)" >> $GITHUB_ENV

      - name: Fail if More Than One Solution File Changed
        run: |
          FILE_COUNT=$(echo "$CHANGED_FILES" | wc -w)
          if [ "$FILE_COUNT" -gt 1 ]; then
            echo "❌ Multiple solution files changed: $CHANGED_FILES"
            exit 1
          fi

      - name: Determine Language
        run: |
          for file in $CHANGED_FILES; do
            case "$file" in
              *.c) echo "LANGUAGE=C" >> $GITHUB_ENV ;;
              *.cpp) echo "LANGUAGE=C++" >> $GITHUB_ENV ;;
              *.py) echo "LANGUAGE=Python" >> $GITHUB_ENV ;;
              *.java) echo "LANGUAGE=Java" >> $GITHUB_ENV ;;
            esac
          done

      - name: Install Dependencies
        run: |
          sudo apt update
          case "$LANGUAGE" in
            C) sudo apt install -y gcc ;;
            C++) sudo apt install -y g++ ;;
            Python) sudo apt install -y python3 ;;
            Java) sudo apt install -y openjdk-17-jdk-headless ;;
          esac

      - name: Run C Tests
        if: env.LANGUAGE == 'C'
        run: |
          for file in $CHANGED_FILES; do
            mv "$file" solutions/solution.c
          done
          if [ -f tests/test.c ]; then
            gcc tests/test.c -o test_runner
            ./test_runner | tee -a test_results.log
          else
            echo "No C test file found."
          fi

      - name: Run C++ Tests
        if: env.LANGUAGE == 'C++'
        run: |
          for file in $CHANGED_FILES; do
            mv "$file" solutions/solution.cpp
          done
          if [ -f tests/test.cpp ]; then
            g++ -std=c++17 tests/test.cpp -o test_runner_cpp
            ./test_runner_cpp | tee -a test_results.log
          else
            echo "No C++ test file found."
          fi

      - name: Run Python Tests
        if: env.LANGUAGE == 'Python'
        run: |
          for file in $CHANGED_FILES; do
            mv "$file" solutions/solution.py
          done
          if [ -f tests/test.py ]; then
            python3 tests/test.py | tee -a test_results.log
          else
            echo "No Python test file found."
          fi

      - name: Run Java Tests
        if: env.LANGUAGE == 'Java'
        run: |
          for file in $CHANGED_FILES; do
            mv "$file" solutions/Solution.java
          done
          if [ -f tests/Test.java ]; then
            mkdir -p out
            javac -d out tests/Test.java solutions/Solution.java
            java -cp out tests.Test | tee -a test_results.log
          else
            echo "No Java test file found."
          fi

      - name: Ensure test_results.log Exists
        if: always()
        run: touch test_results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
